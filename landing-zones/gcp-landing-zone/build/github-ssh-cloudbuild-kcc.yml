# Access the id_github file from Secret Manager, and setup SSH
steps:

- name: 'gcr.io/cloud-builders/git'
  secretEnv: ['SSH_KEY']
  entrypoint: 'bash'
  args:
  - -c
  - |
    ssh-keyscan -t rsa github.com > known_hosts.github
    echo "$$SSH_KEY" >> /root/.ssh/id_rsa
    chmod 400 /root/.ssh/id_rsa
    cp known_hosts.github /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Clone the repository
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
    - -c
    - |
      git clone --recurse-submodules --branch ${_GIT_HEAD_BRANCH} git@github.com:${_GIT_LZ_REPO}
  volumes:
  - name: 'ssh'
    path: /root/.ssh

- id: 'KCC Configuration - Enable Config Controller , Install Policy Controller, Apply Policy Constraints, Enable Config Sync with Anthos'
  name: '${_GAR_REGION}-docker.pkg.dev/${PROJECT_ID}/${_GAR_REPO}/tf-lz-image:latest'
  secretEnv: ['GH_TOKEN']
  entrypoint: 'bash'
  args:
  - -c
  - |
      cd ${_GIT_WORK_DIR}
      export gh_token=$(echo "$$GH_TOKEN" | jq -r .GITHUB_TOKEN)
      bash configure.sh $gh_token

- id: 'SCC terraform apply'
  name: '${_GAR_REGION}-docker.pkg.dev/${PROJECT_ID}/${_GAR_REPO}/tf-lz-image:latest'
  entrypoint: 'bash'
  args:
  - -c
  - |
      cd ${_GIT_WORK_DIR}/scc
      chmod +x scc-controller.sh
      chmod +x scc-gatekeeper.sh
      terraform init
      terraform apply -auto-approve

availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/${_SECRET_ID}/versions/latest
    env: 'SSH_KEY'
  - versionName: projects/${PROJECT_ID}/secrets/${_SECRET_GH_TOKEN}/versions/latest
    env: 'GH_TOKEN'
substitutions:
  _SECRET_ID: INSERT_SECRET_KEY
  _GIT_LZ_REPO: "PRJ_NAME/RNR_REPO_NAME.git"
  _SECRET_GH_TOKEN: gh-token
  _GIT_WORK_DIR: RNR_REPO_NAME
  _GIT_HEAD_BRANCH: PRJ_NAME-main
  _GAR_REGION: INSERT_GAR_REGION
  _GAR_REPO: GAR_REPO_NAME
options:
    dynamic_substitutions: true

timeout: 4800s
