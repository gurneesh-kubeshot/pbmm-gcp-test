steps:
  #Clone the repository
  - name: gcr.io/cloud-builders/git
    args: ['clone', '--branch', 'main', 'https://github.com/gurneesh-kubeshot/pbmm-gcp-test.git']
    id: 'check-out-source'

  # Get the service account key from Secret Manager
  - name: gcr.io/cloud-builders/gcloud
    id: 'get-sa-key'
    entrypoint: 'bash'
    args:
    - -c
    - |
      echo "$$SECRET" > /workspace/sa-key.json
    secretEnv: ['SECRET']

  - id: 'Install Tools and Perform Deployment'
    name: gcr.io/cloud-builders/gcloud
    entrypoint: 'bash'
    args:
    - -c
    - |
      cd pbmm-gcp-test
      curl -fsSL https://apt.releases.hashicorp.com/gpg |  apt-key add -
      apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      apt-get install -y wget unzip
      wget https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_linux_amd64.zip
      unzip terraform_1.6.0_linux_amd64.zip
      mv terraform /usr/local/bin/
      chmod +x /usr/local/bin/terraform
      terraform --version
      apt-get update && apt-get install dos2unix
      apt-get update && apt-get install google-cloud-sdk
      apt-get install google-cloud-cli-terraform-tools -y
      apt-get install jq -y
      apt update && apt install python3 python3-pip -y
      pip3 install pyyaml google-cloud-devtools-cloudbuild rich jsonschema
      ls -l
      find . -type f -name "*.sh" | xargs chmod a+x
      find . -type f -name "*.sh" | xargs dos2unix
      export SUPER_ADMIN_EMAIL=$_SUPER_ADMIN_EMAIL
      export REGION=${_REGION}
      export ORG_ID=${_ORG_ID}
      export ROOT_FOLDER_ID=${_ROOT_FOLDER_ID}
      export BILLING_ID=${_BILLING_ID}
      export DOMAIN=${_DOMAIN}
      echo "Environment variables set:"
      echo "DOMAIN: ${_DOMAIN}"
      echo "REGION: ${_REGION}"
      echo "ORG_ID: ${_ORG_ID}"
      echo "ROOT_FOLDER_ID: ${_ROOT_FOLDER_ID}"
      echo "BILLING_ID: ${_BILLING_ID}"
      cd landing-zones/pbmm-gcp
      chmod +x automation-scripts/whole.sh
      chmod +x ./0-bootstrap/prep.sh
      ./automation-scripts/whole.sh -k /workspace/sa-key.json -p ${_PROJECT_ID} -m plan

logsBucket: 'gs://build-logs-vratant-test-prj/cloudbuild-logs'

availableSecrets:
  secretManager:
  - versionName: projects/${_PROJECT_ID}/secrets/${_SA_KEY_SECRET}/versions/latest
    env: 'SECRET'

substitutions:
  _PROJECT_ID: '' # Project ID where secrets are stored
  _SA_KEY_SECRET: 'terraform-sa-key' # Name of the secret containing the service account key
  _SUPER_ADMIN_EMAIL: ''
  _REGION: ''
  _ORG_ID: ''
  _ROOT_FOLDER_ID: ''
  _BILLING_ID: ''
  _DOMAIN: ''